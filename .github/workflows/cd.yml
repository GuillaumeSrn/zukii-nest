name: CD

on:
  push:
    tags: ['v*']
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  deploy-demo:
    name: D√©ploiement d√©mo
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy demo
        run: |
          echo "üöÄ D√©ploiement de la version d√©mo"
          echo "Commit: ${{ github.sha }}"
          # Ici tu peux ajouter la logique de d√©ploiement pour une d√©mo

  release:
    name: Cr√©ation de release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false

  notify:
    name: Notifications
    runs-on: ubuntu-latest
    needs: [deploy-demo, release]
    if: always()
    
    steps:
      - name: Notify status
        run: |
          if [[ "${{ needs.deploy-demo.result }}" == "success" ]]; then
            echo "‚úÖ D√©ploiement d√©mo r√©ussi"
          fi
          
          if [[ "${{ needs.release.result }}" == "success" ]]; then
            echo "‚úÖ Release cr√©√©e avec succ√®s"
          fi 