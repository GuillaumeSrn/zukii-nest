@startuml Database_Model_Zukii
!define TABLE(name,desc) class name as "desc" << (T,#FFAAAA) >>
!define PK(x) <u>x</u>
!define FK(x) <i>x</i>
!define IDX(x) <color:blue>x</color>

title Modèle de base de données - Zukii (Vision Complète - Roadmap)

' === CORE ENTITIES ===
TABLE(User, "User") {
  PK(id): UUID
  IDX(email): VARCHAR(255) UNIQUE NOT NULL
  password_hash: VARCHAR(255) NOT NULL
  display_name: VARCHAR(100) NOT NULL
  FK(status_id): UUID NOT NULL
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  deleted_by: UUID NULL
}

TABLE(Board, "Board") {
  PK(id): UUID
  title: VARCHAR(200) NOT NULL
  description: TEXT
  FK(owner_id): UUID NOT NULL
  FK(status_id): UUID NOT NULL
  background_color: VARCHAR(7) DEFAULT '#FFFFFF'
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  deleted_by: UUID NULL
}

TABLE(BoardMember, "BoardMember") {
  PK(id): UUID
  FK(board_id): UUID NOT NULL
  FK(user_id): UUID NOT NULL
  permission_level: ENUM('view', 'edit', 'admin') NOT NULL
  joined_at: TIMESTAMP DEFAULT NOW()
  updated_by: UUID NULL
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  deleted_by: UUID NULL
  IDX(UNIQUE): (user_id, board_id) WHERE deleted_at IS NULL
}

TABLE(Invitation, "Invitation") {
  PK(id): UUID
  FK(board_id): UUID NOT NULL
  email: VARCHAR(255) NOT NULL
  permission_level: ENUM('view', 'edit', 'admin') NOT NULL
  IDX(invitation_token): VARCHAR(128) UNIQUE NOT NULL
  invited_by: UUID NOT NULL
  expires_at: TIMESTAMP NOT NULL
  created_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
}

' === BLOCK SYSTEM (Refactorisé) ===
TABLE(Block, "Block") {
  PK(id): UUID
  FK(board_id): UUID NOT NULL
  FK(created_by): UUID NOT NULL
  block_type: ENUM('text', 'file', 'analysis') NOT NULL
  title: VARCHAR(200)
  ' Position avec validation
  position_x: INTEGER NOT NULL CHECK (position_x >= 0)
  position_y: INTEGER NOT NULL CHECK (position_y >= 0)
  width: INTEGER DEFAULT 300 CHECK (width > 0)
  height: INTEGER DEFAULT 200 CHECK (height > 0)
  z_index: INTEGER DEFAULT 0
  FK(status_id): UUID NOT NULL
  ' Référence générique vers le contenu
  FK(content_id): UUID NOT NULL
  ' Tracking des modifications
  last_modified_by: UUID
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  deleted_by: UUID NULL
  IDX(board_spatial): (board_id, position_x, position_y)
  IDX(content_lookup): (content_id, block_type)
}

TABLE(TextContent, "TextContent") {
  PK(id): UUID
  content: TEXT NOT NULL
  format_type: ENUM('plain', 'markdown', 'html') DEFAULT 'plain'
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
}

TABLE(FileContent, "FileContent") {
  PK(id): UUID
  file_name: VARCHAR(255) NOT NULL
  s3_key: VARCHAR(500) NOT NULL
  s3_bucket: VARCHAR(100) NOT NULL
  file_size: BIGINT NOT NULL
  file_type: VARCHAR(50) NOT NULL
  mime_type: VARCHAR(100) NOT NULL
  FK(uploaded_by): UUID NOT NULL
  upload_status: ENUM('uploading', 'completed', 'failed') DEFAULT 'uploading'
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
}

TABLE(AnalysisContent, "AnalysisContent") {
  PK(id): UUID
  analysis_type: VARCHAR(100) NOT NULL
  result_data: JSONB NOT NULL
  FK(source_file_id): UUID
  execution_status: ENUM('pending', 'running', 'completed', 'failed') DEFAULT 'pending'
  execution_time: INTEGER
  error_message: TEXT
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  IDX(analysis_search): (analysis_type, execution_status)
  IDX(jsonb_conversation): USING GIN ((result_data->'conversationId'))
}

' === TEMPLATES D'ANALYSE IA ===
TABLE(AnalysisTemplate, "AnalysisTemplate") {
  PK(id): UUID
  name: VARCHAR(200) NOT NULL
  description: TEXT
  analysis_type: VARCHAR(100) NOT NULL
  prompt_template: TEXT NOT NULL
  parameters: JSONB DEFAULT '{}'
  input_requirements: JSONB
  is_active: BOOLEAN DEFAULT TRUE
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  IDX(analysis_type_active): (analysis_type, is_active)
}

' === RELATIONS ENTRE BLOCKS ===
TABLE(BlockRelation, "BlockRelation") {
  PK(id): UUID
  FK(source_block_id): UUID NOT NULL
  FK(target_block_id): UUID NOT NULL
  relation_type: ENUM('generated_from', 'references', 'comment_on', 'derived_from') NOT NULL
  metadata: JSONB
  FK(created_by): UUID NOT NULL
  created_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
  deleted_by: UUID NULL
  IDX(UNIQUE): (source_block_id, target_block_id, relation_type) WHERE deleted_at IS NULL
  IDX(source_relations): (source_block_id)
  IDX(target_relations): (target_block_id)
}

TABLE(Status, "Status") {
  PK(id): UUID
  IDX(category_name): (category, name) UNIQUE
  category: VARCHAR(50) NOT NULL
  name: VARCHAR(50) NOT NULL
  description: TEXT
  is_active: BOOLEAN DEFAULT TRUE
  created_at: TIMESTAMP DEFAULT NOW()
  updated_at: TIMESTAMP DEFAULT NOW()
  deleted_at: TIMESTAMP NULL
}

' === RELATIONS PRINCIPALES ===
User ||--o{ Board
User ||--o{ BoardMember
Board ||--o{ BoardMember
Board ||--o{ Invitation
Board ||--o{ Block
User ||--o{ Block

Status ||--o{ User
Status ||--o{ Board
Status ||--o{ Block

' === RELATIONS CONTENU ===
Block ||--|| TextContent : "content_id (when type=text)"
Block ||--|| FileContent : "content_id (when type=file)"
Block ||--|| AnalysisContent : "content_id (when type=analysis)"

User ||--o{ FileContent : "uploaded_by"
FileContent ||--o{ AnalysisContent : "source_file_id"

' === RELATIONS TEMPLATES ===
AnalysisTemplate ||--o{ AnalysisContent : "analysis_type"

' === RELATIONS ENTRE BLOCKS ===
Block ||--o{ BlockRelation : "source_block_id"
Block ||--o{ BlockRelation : "target_block_id"
User ||--o{ BlockRelation : "created_by"

' === NOTES EXPLICATIVES ===
note right of Block
  Index optimisés :
  - board_spatial: viewport queries
  - content_lookup: évite joins multiples
end note

note right of AnalysisContent
  Stockage Plotly/IA :
  - result_data: JSON complet (graphiques, etc.)
  - Index JSONB pour recherches rapides
  - Traçabilité vers fichier source
end note

note right of Status
  Index composite :
  - (category, name) UNIQUE
  - Recherches optimisées
  - Ex: status('user', 'active')
end note

note right of AnalysisTemplate
  Templates système pour IA :
  - Prompts préconfigurés OpenAI
  - Paramètres par type d'analyse
  - Menu déroulant frontend Angular
end note

@enduml 